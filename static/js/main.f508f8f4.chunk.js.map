{"version":3,"sources":["components/SuggestionItem.tsx","components/SuggestionList.tsx","screens/Home.tsx","customHook/debouce.tsx","screens/Country.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["SuggestionItem","_ref","item","onPress","react_default","a","createElement","className","style","cursor","onClick","flag","alt","concat","name","src","width","marginRight","SuggestionList","data","onPressItem","length","map","index","SuggestionItem_SuggestionItem","location","pathname","alpha2Code","state","key","toString","Home","history","_useState","useState","_useState2","Object","slicedToArray","keyword","setKeyword","_useState3","_useState4","setData","_useState5","_useState6","isSearch","setIsSearching","deBounceSearch","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","_ref2","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","axios","get","sent","console","log","t0","stop","apply","this","arguments","fetchData","Container","paddingTop","Row","Col","fontSize","onSubmit","event","preventDefault","type","placeholder","onChange","target","SuggestionList_SuggestionList","push","Country","paddingBottom","xs","Card","Img","variant","Body","Title","nativeName","ListGroup","Item","subregion","region","float","href","latlng","rel","capital","languages","join","currencies","code","callingCodes","timezones","topLevelDomain","App","react_router_dom","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","to","react_router","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f508f8f4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ninterface Props {\r\n  item: any;\r\n  onPress: () => void;\r\n}\r\nconst defaultProps = {\r\n  item: {},\r\n  onPress: () => {}\r\n};\r\n\r\ntype ISuggestionItemProps = Props & typeof defaultProps;\r\n\r\nexport const SuggestionItem: React.FC<ISuggestionItemProps> = ({\r\n  item,\r\n  onPress\r\n}) => {\r\n  if (!item) return null;\r\n  return (\r\n    <li\r\n      className=\"list-group-item\"\r\n      style={{ cursor: \"pointer\" }}\r\n      onClick={onPress}\r\n    >\r\n      {item.flag && (\r\n        <img\r\n          alt={`flag-${item.name}`}\r\n          src={item.flag}\r\n          width=\"40\"\r\n          style={{ marginRight: 10 }}\r\n        />\r\n      )}\r\n      {item.name}\r\n    </li>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { SuggestionItem } from \"./SuggestionItem\";\r\n\r\ninterface ISuggestionListProps {\r\n  data: any[];\r\n  onPressItem: Function;\r\n}\r\n\r\nexport const SuggestionList: React.FC<ISuggestionListProps> = ({\r\n  data,\r\n  onPressItem\r\n}) => {\r\n  if (data.length === 0)\r\n    return (\r\n      <ul className=\"list-group\">\r\n        <li className=\"list-group-item\">No country found</li>\r\n      </ul>\r\n    );\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {data.map((item, index) => {\r\n        return (\r\n          <SuggestionItem\r\n            onPress={() => {\r\n              const location = {\r\n                pathname: `/country/${item.alpha2Code}`,\r\n                state: {\r\n                  item: item\r\n                }\r\n              };\r\n              onPressItem(location);\r\n            }}\r\n            key={index.toString()}\r\n            item={item}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./Home.css\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { SuggestionList } from \"../components/SuggestionList\";\r\nimport axios from \"axios\";\r\nimport { useDebounce } from \"../customHook/debouce\";\r\nimport { RouteComponentProps } from \"react-router\";\r\n\r\ninterface IHomeProps {}\r\n\r\ntype THomeProps = RouteComponentProps<any> & IHomeProps;\r\n\r\nexport const Home: React.FC<THomeProps> = ({ history }) => {\r\n  const [keyword, setKeyword] = useState<string>(\"viet nam\");\r\n  const [data, setData] = useState<any[]>([]);\r\n  const [isSearch, setIsSearching] = useState<boolean>(false);\r\n\r\n  const deBounceSearch = useDebounce(keyword, 500);\r\n\r\n  useEffect(() => {\r\n    if (deBounceSearch) {\r\n      setIsSearching(true);\r\n\r\n      const fetchData = async () => {\r\n        try {\r\n          const result = await axios.get(\r\n            `https://restcountries.eu/rest/v2/name/${keyword}`\r\n          );\r\n\r\n          console.log(\"result: \", result.data);\r\n\r\n          setIsSearching(false);\r\n          setData(result.data);\r\n        } catch (error) {\r\n          setIsSearching(false);\r\n          console.log(\"error: \", error);\r\n          setData([]);\r\n        }\r\n      };\r\n\r\n      if (keyword) fetchData();\r\n    } else {\r\n      setData([]);\r\n    }\r\n  }, [deBounceSearch]);\r\n  return (\r\n    <Container style={{ paddingTop: 100 }}>\r\n      <Row>\r\n        <Col>\r\n          <h1 className=\"text-center\" style={{ fontSize: 72 }}>\r\n            Country\r\n          </h1>\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ paddingTop: 100 }}>\r\n        <Col>\r\n          <form className=\"example\" onSubmit={event => event.preventDefault()}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search..\"\r\n              name=\"search\"\r\n              value={keyword}\r\n              onChange={(event: any) => {\r\n                setKeyword(event.target.value);\r\n                if (event.target.value === \"\") {\r\n                  setData([]);\r\n                }\r\n              }}\r\n            />\r\n            <button type=\"submit\">\r\n              {isSearch ? (\r\n                <i className=\"fa fa-spin fa-spinner\" />\r\n              ) : (\r\n                <span>{data.length} result(s)</span>\r\n              )}\r\n            </button>\r\n          </form>\r\n          <SuggestionList\r\n            onPressItem={history.push}\r\n            data={data}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nexport const useDebounce = (value: string, delay: number) => {\r\n  const [debouncedValue, setDebouncedValue] = useState<string>(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n    // Return a cleanup function that will be called every time ...\r\n    // ... useEffect is re-called. useEffect will only be re-called ...\r\n    // ... if value changes (see the inputs array below).\r\n    // This is how we prevent debouncedValue from changing if value is ...\r\n    // ... changed within the delay period. Timeout gets cleared and restarted.\r\n    // To put it in context, if the user is typing within our app's ...\r\n    // ... search box, we don't want the debouncedValue to update until ...\r\n    // ... they've stopped typing for more than 500ms.\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value]);\r\n\r\n  return debouncedValue;\r\n};\r\n","import React from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { Container, Row, Col, Card, Button, ListGroup } from \"react-bootstrap\";\r\n\r\ninterface ICountryProps {}\r\n\r\ntype TParams = { alias: string };\r\n\r\ntype TCountryProps = RouteComponentProps<TParams> & ICountryProps;\r\n\r\nexport const Country: React.FC<TCountryProps> = ({ history, location }) => {\r\n  const item = location.state && location.state.item;\r\n  if (!item) return null;\r\n\r\n  return (\r\n    <Container style={{ paddingTop: \"100px\", paddingBottom: \"100px\" }}>\r\n      <Row>\r\n        <Col />\r\n        <Col xs={6}>\r\n          <Card style={{ width: \"100%\" }}>\r\n            <Card.Img variant=\"top\" src={item.flag} />\r\n            <Card.Body>\r\n              <Card.Title>\r\n                {item.name} - {item.nativeName}\r\n              </Card.Title>\r\n            </Card.Body>\r\n          </Card>\r\n          <ListGroup>\r\n            <ListGroup.Item>\r\n              Capital:{\" \"}\r\n              <strong>\r\n                {item.subregion} - {item.region}\r\n              </strong>\r\n              <a\r\n                style={{ float: \"right\" }}\r\n                href={`https://www.latlong.net/c/?lat=${item.latlng[0]}&long=${\r\n                  item.latlng[1]\r\n                }`}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <span>View on maps</span>\r\n              </a>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              Region: <strong>{item.capital}</strong>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              Languare:{\" \"}\r\n              <strong>\r\n                {item.languages.map((item: any) => `${item.name}`).join(\", \")}\r\n              </strong>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              Curency: <strong> {item.currencies[0].code}</strong>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              Calling Code:\r\n              <strong>\r\n                {\" \"}\r\n                [\r\n                {item.callingCodes.map((item: number) => `+${item}`).join(\", \")}\r\n                ]\r\n              </strong>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              TimeZone:{\" \"}\r\n              <strong>\r\n                [{item.timezones.map((item: number) => `${item}`).join(\", \")}]\r\n              </strong>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              Domain:{\" \"}\r\n              <strong>\r\n                {\" \"}\r\n                [\r\n                {item.topLevelDomain.map((item: number) => `${item}`).join(\" \")}\r\n                ]\r\n              </strong>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col />\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Home } from \"./screens/Home\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { Country } from \"./screens/Country\";\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"/\">React Boostrap Demo</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Item>\n              <Link className=\"nav-link\" to=\"/\">\n                Home\n              </Link>\n            </Nav.Item>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/country/:alias\" component={Country} />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}